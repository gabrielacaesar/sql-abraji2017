SELECT UF, NOME_MUNICIPIO, COUNT(DISTINCT NOME_FAVORECIDO) AS N_FAVORECIDOS
FROM BOLSAFAMILIAFOLHAPAGAMENTO
GROUP BY UF, NOME_MUNICIPIO
ORDER BY N_FAVORECIDOS DESC

+
SELECT UF, NOME_MUNICIPIO, COUNT(DISTINCT NOME_FAVORECIDO)
FROM BOLSAFAMILIAFOLHAPAGAMENTO
GROUP BY UF, NOME_MUNICIPIO

+
SELECT COUNT(DISTINCT NOME_FAVORECIDO)
FROM BOLSAFAMILIAFOLHAPAGAMENTO

+
SELECT SUM(VALOR_PARCELA)
FROM BOLSAFAMILIASACADO

+
SELECT MAX(VALOR_PARCELA)
FROM BOLSAFAMILIASACADO

+
SELECT MIN(VALOR_PARCELA)
FROM BOLSAFAMILIASACADO

+
SELECT AVG(VALOR_PARCELA)
FROM BOLSAFAMILIASACADO

+
inner join ...
on (a.uf = b.uf AND a.municipio = b.municipio)

+
SELECT distinct uf, objeto_convenio
from convenios
where upper(objeto_convenio) LIKE 'AQUISICAO %CAMINHAO%'
OR upper(objeto_convenio) LIKE 'AQUISICAO %TRATOR%'
limit 50

+
SELECT distinct uf, nome_municipio
from bolsafamiliafolhapagamento
where nome_municipio LIKE 'RIO%'
limit 50

+
eu não consigo fazer LIKE em coluna integer

+
"" tem o mesmo significado de IS NULL mas só funciona em coluna string

+
SELECT uf, nome_municipio, valor_parcela
from bolsafamiliafolhapagamento
where valor_parcela BETWEEN 400 AND 700

+
SELECT uf, nome_municipio, valor_parcela
from bolsafamiliafolhapagamento
where valor_parcela in (501, 301, 201);

+
SELECT uf, nome_municipio, valor_parcela
from bolsafamiliafolhapagamento
where valor_parcela > 1000

+
SELECT uf, nome_municipio
from bolsafamiliafolhapagamento
where uf = 'RJ' or (uf = 'SP' and nome_municipio = 'OSASCO')
limit 200

+
SELECT distinct uf, nome_municipio
from bolsafamiliafolhapagamento
where uf = 'RJ'
limit 10

+
SELECT SGL_UF_IES, COUNT(*) AS NUM_PROF
FROM
(SELECT CO_DOCENTE, DM_DOCENTE.CO_IES, SGL_UF_IES
FROM DM_DOCENTE
LEFT JOIN DM_IES
USING(CO_IES) ) AS TABELA1

GROUP BY SGL_UF_IES

+
SELECT CO_DOCENTE, DM_DOCENTE.CO_IES, SGL_UF_IES
FROM DM_DOCENTE
LEFT JOIN DM_IES
USING(CO_IES)
LIMIT 10

+
SELECT view_alunos.CO_IES, view_alunos.NO_IES, view_alunos.NUM_ALUNOS, pesquisa.VL_PESQUISA, VL_PESQUISA/NUM_ALUNOS as pesquisa_por_aluno
FROM view_alunos
JOIN pesquisa
USING(CO_IES)
ORDER BY pesquisa_por_aluno DESC

+
SELECT view_alunos.CO_IES, view_alunos.NO_IES, view_alunos.NUM_ALUNOS, pesquisa.VL_PESQUISA, VL_PESQUISA/NUM_ALUNOS as pesquisa_por_aluno
FROM view_alunos
JOIN pesquisa
ON view_alunos.CO_IES = pesquisa.CO_IES
ORDER BY pesquisa_por_aluno DESC

+
SELECT view_alunos.CO_IES, view_alunos.NO_IES, view_alunos.NUM_ALUNOS, pesquisa.VL_PESQUISA, VL_PESQUISA/NUM_ALUNOS as pesquisa_por_aluno
FROM view_alunos, pesquisa
WHERE view_alunos.CO_IES = pesquisa.CO_IES
ORDER BY pesquisa_por_aluno DESC

+
SELECT view_alunos.CO_IES, view_alunos.NO_IES, view_alunos.NUM_ALUNOS, pesquisa.VL_PESQUISA
FROM view_alunos, pesquisa
WHERE view_alunos.CO_IES = pesquisa.CO_IES

+
SELECT SUM(QT_MATRICULA_CURSO)
FROM DM_CURSO
WHERE CO_MODALIDADE_ENSINO = "2" AND CO_NIVEL_ACADEMICO = "1"

+
SELECT CO_OCDE_AREA_DETALHADA, NO_OCDE_AREA_DETALHADA, AVG(NU_CARGA_HORARIA)
FROM DM_CURSO
GROUP BY NO_OCDE_AREA_DETALHADA
ORDER BY AVG(NU_CARGA_HORARIA)

+
SELECT CO_IES, NO_IES, COUNT(CO_CURSO)
FROM DM_CURSO
WHERE CO_SITUACAO_CURSO = "1"
GROUP BY NO_IES
ORDER BY COUNT(CO_CURSO)

+
SELECT COUNT(*), CO_MUNICIPIO_CURSO
FROM DM_CURSO
WHERE CO_MODALIDADE_ENSINO = "1"
GROUP BY CO_MUNICIPIO_CURSO

+
SELECT SUM(QT_MATRICULA_CURSO), NO_OCDE_AREA_GERAL
FROM DM_CURSO
WHERE NO_OCDE_AREA_GERAL != ""
GROUP BY NO_OCDE_AREA_GERAL

+
SELECT NO_CURSO, QT_MATRICULA_CURSO, DS_CATEGORIA_ADMINISTRATIVA
FROM DM_CURSO
WHERE QT_MATRICULA_CURSO != "" AND QT_MATRICULA_CURSO > 1000 AND CO_CATEGORIA_ADMINISTRATIVA <= 3

+
UPDATE IES2
SET PRIVADA = 1
WHERE CO_CATEGORIA_ADMINISTRATIVA = 5 OR CO_CATEGORIA_ADMINISTRATIVA = 4

+
DELETE FROM IES2
WHERE field1 = "CO_IES"

+
SELECT DISTINCT SGL_UF_IES
FROM DM_IES

+
SELECT
DS_CATEGORIA_ADMINISTRATIVA,
COUNT(*)
FROM DM_IES
GROUP BY DS_CATEGORIA_ADMINISTRATIVA

+
SELECT
DS_CATEGORIA_ADMINISTRATIVA,
SUM(QT_TEC_TOTAL) AS TOTAL_FUNC
FROM DM_IES
WHERE SGL_UF_IES = "SP"
GROUP BY DS_CATEGORIA_ADMINISTRATIVA

+
SELECT
SGL_UF_IES,
SUM(QT_TEC_TOTAL) AS TOTAL_FUNC
FROM DM_IES
GROUP BY SGL_UF_IES

+
SELECT
DS_CATEGORIA_ADMINISTRATIVA,
SUM(QT_TEC_TOTAL) AS TOTAL_FUNC
FROM DM_IES
GROUP BY DS_CATEGORIA_ADMINISTRATIVA

+
SELECT
COUNT(*) AS NUM_IES,
SUM(QT_TEC_TOTAL) AS TOTAL_FUNC
FROM DM_IES
WHERE CO_CATEGORIA_ADMINISTRATIVA = "1" AND SGL_UF_IES = "MG"

+
SELECT COUNT(*), SUM(QT_TEC_TOTAL)
FROM DM_IES
WHERE CO_CATEGORIA_ADMINISTRATIVA = "1" AND SGL_UF_IES = "MG"

+

SELECT SUM(QT_TEC_TOTAL)
FROM DM_IES
WHERE CO_CATEGORIA_ADMINISTRATIVA = "1"

+
select *
from filiadosRJ
where nomedomunicipio = "RIO DE JANEIRO" AND situacaodoregistro = "REGULAR" AND datadafiliacao like '%2017%'

+
SELECT *
FROM tabela
WHERE coluna_cidade NOT IN ("SÃO PAULO","RIO DE JANEIRO","BELO HORIZONTE")

+
SELECT *
FROM tabela
WHERE coluna_cidade == "SÃO PAULO" OR
coluna_cidade == "RIO DE JANEIRO" OR coluna_cidade == "BELO HORIZONTE"

eh a mesma coisa que:

SELECT *
FROM tabela
WHERE coluna_cidade IN ("SÃO PAULO","RIO DE JANEIRO","BELO HORIZONTE")

+
SELECT *
FROM ies
WHERE NO_IES LIKE "%MACKENZIE%"

+
SELECT *
FROM ies
WHERE QT_TEC_TOTAL >= 1000 OR SGL_UF_IES = "RJ"

+
SELECT *
FROM ies
WHERE SGL_UF_IES = "SP"

+
SELECT NO_IES, SGL_IES, QT_TEC_TOTAL
FROM ies
ORDER BY QT_TEC_TOTAL DESC
LIMIT 20
